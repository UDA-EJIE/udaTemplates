/*!
 * Copyright 2024 E.J.I.E., S.A.
 *
 * Licencia con arreglo a la EUPL, Versión 1.1 exclusivamente (la "Licencia");
 * Solo podrá usarse esta obra si se respeta la Licencia.
 * Puede obtenerse una copia de la Licencia en
 *
 *      http://ec.europa.eu/idabc/eupl.html
 *
 * Salvo cuando lo exija la legislación aplicable o se acuerde por escrito,
 * el programa distribuido con arreglo a la Licencia se distribuye "TAL CUAL",
 * SIN GARANTÍAS NI CONDICIONES DE NINGÚN TIPO, ni expresas ni implícitas.
 * Véase la Licencia en el idioma concreto que rige los permisos y limitaciones
 * que establece la Licencia.
 */

jQuery(function($) {
	{% for column in allColumnsNoPk %}
	{% if column.activate != false: %}
		{% if column.type == "Datepicker" %}
	$("#{{column.name.lower()|toCamelCase}}_detail_table").rup_date();
	$("#{{column.name.lower()|toCamelCase}}_filter_table").rup_date();
		{% endif %}
	{% endif %}
	{% endfor %}
const tableColModels = [
		{% for column in allColumns %}
		{
			name: "{{column.name.lower()|toCamelCase}}",
			index: "{{column.name.lower()|toCamelCase}}",
			editable: {{column.editable}},
		{% if column.type == "Text" %}
			rupType: "combo",
		{% elif column.type == "Autocomplete" %}
			rupType: "autocomplete",
		{% elif column.type == "Datepicker" %}
			rupType: "datepicker",
		{% else %}
			rupType: "datepicker",
		{% endif%}	
			hidden: {{column.hidden}}
		}{% if loop.index != allColumns|length %},{% endif%}
		{% endfor %}
	];

	$("#{{nameMaint}}").rup_table({
		colReorder: {
			fixedColumnsLeft: 1
		},
		colModel: tableColModels,
		primaryKey: "{{maint.primaryKey}}",
        {% if maint.filterMaint != false: %}
		filter: {
  	  		id: "{{nameMaint}}_filter_form",
  	  		filterToolbar: "{{nameMaint}}_filter_toolbar",
  	  		collapsableLayerId: "{{nameMaint}}_filter_fieldset"
     	},
     	{% else %}
     	filter: "noFilter",
     	{% endif%} 
     	<#if (maint.isMaint)?string == "true">
     		<#if (maint.typeMaint)?string == "DETAIL">
     	formEdit: {
     		titleForm: jQuery.rup.i18nParse(jQuery.rup.i18n.base, "rup_table.edit.editCaption"),
        	detailForm: "#{{nameMaint}}_detail_div",
        	<#if (maint.clientValidationMaint)?string == "true">
			<#-- Reglas de validaciÃƒÂ³n -->
         	validate: { 
    			rules: {
				{% for column in allColumns %}
					<#if (maint.primaryKey)?has_content && !(maint.primaryKey)?contains(columnProperties.name)>
    				"{{column.name.lower()|toCamelCase}}": {
						required: ${columnProperties.requiredEditRules?string}<#if columnProperties.typeEditRules?has_content>,</#if>
						<#switch columnProperties.typeEditRules>
							<#case "number">
							number: true<#if (columnProperties.minValueEditRules)?has_content || (columnProperties.maxValueEditRules)?has_content>,
							min: ${columnProperties.minValueEditRules?string}</#if><#if (columnProperties.maxValueEditRules)?has_content>,
							max: ${columnProperties.maxValueEditRules?string}</#if>
								<#break>	
							<#case "integer">
							integer: true
								<#break>
							<#case "email">
							email: true
								<#break>
							<#case "url">
							url: true
								<#break>
							<#case "date">
							date: true
								<#break>
							<#case "time">
							time: true
								<#break>
							<#default>
								<#break>
						</#switch>	
					}<#if columnProperties_has_next>,</#if>
					</#if>
				{% endfor %}
				}
		   	}
		   	</#if>
		},
    		</#if>
    		<#if (maint.typeMaint)?string == "INLINE">		
    	inlineEdit: {
    			<#if (maint.clientValidationMaint)?string == "true">
			<#-- Reglas de validaciÃƒÂ³n -->
         	validate: { 
    			rules: {
					{% for column in allColumns %}
					<#if (maint.primaryKey)?has_content && !(maint.primaryKey)?contains(columnProperties.name)>
    				"{{column.name.lower()|toCamelCase}}": {
						required: ${columnProperties.requiredEditRules?string}<#if columnProperties.typeEditRules?has_content>,</#if>
						<#switch columnProperties.typeEditRules>
							<#case "number">
								number: true<#if (columnProperties.minValueEditRules)?has_content || (columnProperties.maxValueEditRules)?has_content>,
								min: ${columnProperties.minValueEditRules?string}</#if><#if (columnProperties.maxValueEditRules)?has_content>,
								max: ${columnProperties.maxValueEditRules?string}</#if>
								<#break>	
							<#case "integer">
								integer: true
								<#break>
							<#case "email">
								email: true
								<#break>
							<#case "url">
								url: true
								<#break>
							<#case "date">
								date: true
								<#break>
							<#case "time">
								time: true
								<#break>
							<#default>
								<#break>
						</#switch>	
					}<#if columnProperties_has_next>,</#if>
					</#if>
    				{% endfor %}
				}
    		}
    			</#if>
    	},
    		</#if>
    	</#if>
		<#if (maint.multiSelectMaint)?string == "true">
	    multiSelect: {
       		style: "multi"
   		},
   		<#else>
   		select: {
       		activate: true
   		},
		</#if>
		<#if (maint.searchMaint)?string == "true">
		seeker: {
			activate: true
		},
		</#if>
		<#if (maint.toolBarButtonsMaint)?string == "true">	
		buttons: {
			activate: true
			<#if (maint.isMaint)?string == "false">
			,blackListButtons : ["addButton", "editButton", "cloneButton", "deleteButton"]
			</#if>
			<#if (maint.contextMenuMaint)?string == "false">
			,contextMenu: false
			</#if>
		},
		</#if>
		order: [[${grid.sortPosition - pkCont + maint.multiSelectMaint?string(1, 0)?number}, "${grid.sortOrder}"]]
	});
});
