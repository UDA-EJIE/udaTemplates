<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="springSecurityFilterChain" 
	  class="org.springframework.security.web.FilterChainProxy">
	  <security:filter-chain-map path-type="ant">
	  	<security:filter-chain pattern="/error" filters="none"/>
	    <security:filter-chain pattern="/**" filters="	    	
	    	securityContextPersistenceFilter,
	    	logoutFilter,
	    	preAuthenticateProcessingFilter,
	    	exceptionTranslationFilter,
	    	filterSecurityInterceptor" />
	  </security:filter-chain-map>
	</bean>

	<bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>
	
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<!-- the post-logout destination -->
		<constructor-arg value="/" />
		<constructor-arg>
			<array>
				<ref local="myLogoutHandler" />
			</array>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/logout" />
	</bean>
	<bean id="myLogoutHandler" class="com.ejie.x38.security.MyLogoutHandler">
		<property name="perimetralSecurityWrapper" ref="perimetralSecurityWrapper" />
		<property name="invalidateHttpSession" value="true" />
		<property name="invalidateXlnetSession" value="false" />
	</bean>

	<bean id="preAuthenticateProcessingFilter" class="com.ejie.x38.security.PreAuthenticateProcessingFilter">
		<property name="perimetralSecurityWrapper" ref="perimetralSecurityWrapper" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="xlnetAuthenticationProvider" />
	</security:authentication-manager>
	<bean id="xlnetAuthenticationProvider" class="com.ejie.x38.security.XlnetAuthenticationProvider">
		<property name="myAuthenticatedUserDetailsService" ref="myAuthenticatedUserDetailsService" />
	</bean>
	<bean id="myAuthenticatedUserDetailsService" class="com.ejie.x38.security.MyAuthenticatedUserDetailsService">
		<property name="perimetralSecurityWrapper" ref="perimetralSecurityWrapper" />
	</bean>

	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
	  <property name="authenticationEntryPoint" ref="myAuthenticationEntryPoint"/>
	  <property name="accessDeniedHandler" ref="myAccessDeniedHandler"/>
	</bean>
	<bean id="myAuthenticationEntryPoint" class="com.ejie.x38.security.MyAuthenticationEntryPoint">
		<property name="perimetralSecurityWrapper" ref="perimetralSecurityWrapper" />
	</bean>
	<bean id="myAccessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/accessDenied" />
	</bean> 
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor" />
	
	<bean id="affirmativeBased" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<ref bean="expressionVoter" />
			</list>
		</property>
	</bean>
	<bean id="expressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter">
		<property name="expressionHandler" ref="expressionHandler" />
	</bean>
	<bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

</beans>