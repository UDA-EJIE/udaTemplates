<#-- 
 -- Copyright 2011 E.J.I.E., S.A.
 --
 -- Licencia con arreglo a la EUPL, Versión 1.1 exclusivamente (la «Licencia»);
 -- Solo podrá usarse esta obra si se respeta la Licencia.
 -- Puede obtenerse una copia de la Licencia en
 --
 --      http://ec.europa.eu/idabc/eupl.html
 --
 -- Salvo cuando lo exija la legislación aplicable o se acuerde por escrito, 
 -- el programa distribuido con arreglo a la Licencia se distribuye «TAL CUAL»,
 -- SIN GARANTÍAS NI CONDICIONES DE NINGÚN TIPO, ni expresas ni implícitas.
 -- Véase la Licencia en el idioma concreto que rige los permisos y limitaciones
 -- que establece la Licencia.
 -->
package ${packageNameSkeleton};
import javax.ejb.Remote;
import com.ejie.x38.remote.TransactionMetadata;
<#foreach parametro in skeletonUtils.generateParameterImports(methods,isJpa)>
import ${parametro};
</#foreach>

/**
 * ${serviceName} + "SkeletonRemote generated by UDA".
 * @author UDA
 */

@Remote
@SuppressWarnings("rawtypes")
public interface ${serviceName}SkeletonRemote{
<#assign listaMetodos = methods >
<#assign param ="">
<#list listaMetodos as metodo>
	   <#assign param = metodo[3]>

	/**
	 * Method ${metodo[0]}.
	 *
<#foreach parametro in skeletonUtils.getParametersSkeleton(param,false,isJpa)>
	 * @param arg${parametro_index} ${parametro} 
</#foreach>
	 * @param transactionMetadata TransactionMetadata
<#if metodo[1]!= "void"> 
	 * @return ${metodo[1]}
</#if>
	 */
	${metodo[2]} ${metodo[0]} (<#foreach parametro in skeletonUtils.getParametersSkeleton(param,false,isJpa)>${parametro} arg${parametro_index}, </#foreach>TransactionMetadata transactionMetadata)<#if metodo[4]!= ""> throws ${metodo[4]}</#if>;
</#list>
}
