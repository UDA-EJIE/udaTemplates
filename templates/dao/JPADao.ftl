package ${pojo.getPackageName()}.dao;  
<#assign classbody>
<#assign declarationName = pojo.importType(pojo.getDeclarationName()) >
import ${pojo.importType(pojo.getPackageName()+'.model.'+pojo.getDeclarationName())};
<#-- Obtenemos el tipo de la primaria -->
<#if pojo.hasIdentifierProperty() && !c2j.isComponent(pojo.getIdentifierProperty())>
<#assign tipo=pojo.getIdentifierProperty().getType() >
<#assign Typejo = tipo.getReturnedClass().getName() >
	<#if Typejo?lower_case = 'int'><#assign TypeSimp='java.Lang.Integer'>
	<#else>
		<#assign TypeSimp = warSupressor.typeConverter(Typejo,true)>

	</#if>
<#else> <#-- calve compuesta --> 
	<#assign TypeSimp = pojo.getPackageName()+'.model.'+pojo.getDeclarationName()+'Id'>

</#if>
/**
${pojo.getClassJavaDoc(pojo.getDeclarationName() + "Dao generated by UDA 1.0", 0)}, ${date}.
* @author UDA
 */
public interface ${pojo.getDeclarationName()}Dao extends ${pojo.importType("com.ejie.x38.dao.GenericDao")}<${pojo.getDeclarationName()}, ${pojo.importType(TypeSimp)}> {

/**
	 *  Method  'setEntityManager'.
	 *   @param entityManager ${pojo.importType("javax.persistence.EntityManager")}
	 */
	void setEntityManager(${pojo.importType("javax.persistence.EntityManager")} entityManager);
	
	 /**
	 * Finds a List of rows in the${pojo.getDeclarationName()} table.
	 *
	 * @param ${pojo.getDeclarationName()?lower_case} ${pojo.getDeclarationName()}
	 * @param pagination ${pojo.importType("com.ejie.x38.dto.Pagination")}
	 * @return ${pojo.importType("java.util.List")} ${pojo.getDeclarationName()}
	 */
	${pojo.importType("java.util.List")}<${pojo.getDeclarationName()}> findAll(${pojo.getDeclarationName()} ${pojo.getDeclarationName()?lower_case}, ${pojo.importType("com.ejie.x38.dto.Pagination")} pagination);

	 /**
	 * Counts the rows in the${pojo.getDeclarationName()} table.
	 *
	 * @param ${pojo.getDeclarationName()?lower_case} ${pojo.getDeclarationName()}
	 * @return Long
	 */
	Long findAllCount(${pojo.getDeclarationName()} ${pojo.getDeclarationName()?lower_case});
	/**
	 * Finds a List of rows in the${pojo.getDeclarationName()} table using like.
	 *
	 * @param ${pojo.getDeclarationName()?lower_case} ${pojo.getDeclarationName()}
	 * @param pagination ${pojo.importType("com.ejie.x38.dto.Pagination")}
	 * @return ${pojo.importType("java.util.List")} ${pojo.getDeclarationName()}
	 */
	${pojo.importType("java.util.List")}<${pojo.getDeclarationName()}> findAllLike(${pojo.getDeclarationName()} ${pojo.getDeclarationName()?lower_case}, ${pojo.importType("com.ejie.x38.dto.Pagination")} pagination, Boolean startsWith) ;

	<#foreach property in pojo.getAllPropertiesIterator()>
      <#if c2h.isManyToMany(property)>
        <#if c2h.isCollection(property)>
           <#include "JPADaoRelations.ftl"/>					
        </#if>
      </#if>
    </#foreach>	
}	

</#assign>

${pojo.generateImports()}
${classbody}
	